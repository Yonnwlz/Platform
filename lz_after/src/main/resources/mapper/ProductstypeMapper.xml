<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.dao.ProductstypeMapper">
  <resultMap id="BaseResultMap" type="com.lz.model.pojo.Productstype">
    <id column="productsTypeId" jdbcType="INTEGER" property="productstypeid" />
    <result column="productsTypeName" jdbcType="VARCHAR" property="productstypename" />
    <result column="productsTypeCreateTime" jdbcType="TIMESTAMP" property="productstypecreatetime" />
    <result column="productsTypeDesc" jdbcType="VARCHAR" property="productstypedesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    productsTypeId, productsTypeName, productsTypeCreateTime, productsTypeDesc
  </sql>
  <select id="selectByExample" parameterType="com.lz.model.pojo.ProductstypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productstype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from productstype
    where productsTypeId = #{productstypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from productstype
    where productsTypeId = #{productstypeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lz.model.pojo.ProductstypeExample">
    delete from productstype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lz.model.pojo.Productstype">
    insert into productstype (productsTypeId, productsTypeName, 
      productsTypeCreateTime, productsTypeDesc
      )
    values (#{productstypeid,jdbcType=INTEGER}, #{productstypename,jdbcType=VARCHAR}, 
      #{productstypecreatetime,jdbcType=TIMESTAMP}, #{productstypedesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lz.model.pojo.Productstype">
    insert into productstype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productstypeid != null">
        productsTypeId,
      </if>
      <if test="productstypename != null">
        productsTypeName,
      </if>
      <if test="productstypecreatetime != null">
        productsTypeCreateTime,
      </if>
      <if test="productstypedesc != null">
        productsTypeDesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productstypeid != null">
        #{productstypeid,jdbcType=INTEGER},
      </if>
      <if test="productstypename != null">
        #{productstypename,jdbcType=VARCHAR},
      </if>
      <if test="productstypecreatetime != null">
        #{productstypecreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="productstypedesc != null">
        #{productstypedesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lz.model.pojo.ProductstypeExample" resultType="java.lang.Long">
    select count(*) from productstype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update productstype
    <set>
      <if test="record.productstypeid != null">
        productsTypeId = #{record.productstypeid,jdbcType=INTEGER},
      </if>
      <if test="record.productstypename != null">
        productsTypeName = #{record.productstypename,jdbcType=VARCHAR},
      </if>
      <if test="record.productstypecreatetime != null">
        productsTypeCreateTime = #{record.productstypecreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productstypedesc != null">
        productsTypeDesc = #{record.productstypedesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update productstype
    set productsTypeId = #{record.productstypeid,jdbcType=INTEGER},
      productsTypeName = #{record.productstypename,jdbcType=VARCHAR},
      productsTypeCreateTime = #{record.productstypecreatetime,jdbcType=TIMESTAMP},
      productsTypeDesc = #{record.productstypedesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lz.model.pojo.Productstype">
    update productstype
    <set>
      <if test="productstypename != null">
        productsTypeName = #{productstypename,jdbcType=VARCHAR},
      </if>
      <if test="productstypecreatetime != null">
        productsTypeCreateTime = #{productstypecreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="productstypedesc != null">
        productsTypeDesc = #{productstypedesc,jdbcType=VARCHAR},
      </if>
    </set>
    where productsTypeId = #{productstypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lz.model.pojo.Productstype">
    update productstype
    set productsTypeName = #{productstypename,jdbcType=VARCHAR},
      productsTypeCreateTime = #{productstypecreatetime,jdbcType=TIMESTAMP},
      productsTypeDesc = #{productstypedesc,jdbcType=VARCHAR}
    where productsTypeId = #{productstypeid,jdbcType=INTEGER}
  </update>
</mapper>